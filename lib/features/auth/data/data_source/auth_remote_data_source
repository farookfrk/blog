import 'package:blog_using_bloc/core/error/exceptions.dart';
import 'package:supabase_flutter/supabase_flutter.dart';

abstract interface class AuthRemoteDataSource {
  Future<String> signupWithEmailAndPassword(
      {required String name, required String email, required String password});
  Future<String> loginWithEmailAndPassword(
      {required String email, required String password});
}

class AuthDataRemothImpl implements AuthRemoteDataSource {
  final SupabaseClient supeBaseClient;
  AuthDataRemothImpl(this.supeBaseClient);
  @override
  Future<String> loginWithEmailAndPassword(
      {required String email, required String password}) {
    throw UnimplementedError();
  }

  @override
  Future<String> signupWithEmailAndPassword(
      {required String name,
      required String email,
      required String password}) async {
    try {
      final response = await supeBaseClient.auth
          .signUp(password: password, email: email, data: {'name': name});
      if (response.user == null) {
        throw FailureException('User is null');
      }
      return response.user!.id;
    } catch (e) {
      throw FailureException('User is null');
    }
  }
}
